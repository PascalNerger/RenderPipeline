#pragma once

#include "PBR/RHI/Shader.h"
#include "PBR/RHI/Texture.h"
#include "PBR/RHI/FrameBuffer.h"

#include "PBR/RenderCore/RenderStage.h"
#include "PBR/RenderCore/RenderPass.h"


namespace EngineCore
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	// Forward Declarations ////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////

	class Renderer;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	// BrdfPass ////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////

	class BrdfPass : public RenderPass
	{

	public:

		BrdfPass(Renderer* renderer);
		virtual ~BrdfPass();

		void Init();
		void Execute();

	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	// BrdfStage ///////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////

	class BrdfStage : public RenderStage
	{

	public:

		BrdfStage(Renderer* renderer);
		virtual ~BrdfStage();

		void Init();
		void Execute();

		inline const Texture2DRef& GetBrdfTexture() const { return BrdfTexture; }

	private:

		BrdfPass* BrdfPass;
		
		ShaderRef BrdfShader;
		FrameBufferRef BrdfFrameBuffer;

		Texture2DRef BrdfTexture;

	};

}